name: iOS Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - development
        - staging
        - production

jobs:
  test:
    runs-on: macos-latest
    name: Test iOS App
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        
    - name: Install dependencies
      run: |
        cd apps/mobile
        yarn install
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        working-directory: apps/mobile/ios
        bundler-cache: true
        
    - name: TypeScript Check
      run: npx nx type-check mobile
      
    - name: Lint
      run: npx nx lint mobile || true # Don't fail on lint warnings
      
    - name: Install CocoaPods
      run: npx nx pod-install mobile

  build-development:
    if: github.event_name == 'pull_request'
    needs: test
    runs-on: macos-latest
    name: Build Development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        
    - name: Install dependencies
      run: |
        cd apps/mobile
        yarn install
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        working-directory: apps/mobile/ios
        bundler-cache: true
        
    - name: Setup Fastlane Match
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
      run: npx nx fastlane-certificates mobile
      
    - name: Build Development
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      run: npx nx build-development mobile
      
    - name: Upload Development Build
      uses: actions/upload-artifact@v4
      with:
        name: ios-development-build
        path: apps/mobile/ios/builds/development/
        retention-days: 7

  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    needs: test
    runs-on: macos-latest
    name: Deploy to TestFlight (Staging)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        
    - name: Install dependencies
      run: |
        cd apps/mobile
        yarn install
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        working-directory: apps/mobile/ios
        bundler-cache: true
        
    - name: Setup Fastlane Match
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
      run: npx nx fastlane-certificates mobile
      
    - name: Deploy to TestFlight
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: npx nx deploy-beta mobile

  deploy-production:
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[release]')
    needs: test
    runs-on: macos-latest
    name: Deploy to App Store
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        
    - name: Install dependencies
      run: |
        cd apps/mobile
        yarn install
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        working-directory: apps/mobile/ios
        bundler-cache: true
        
    - name: Setup Fastlane Match
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
      run: npx nx fastlane-certificates mobile
      
    - name: Deploy to App Store
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: npx nx deploy-production mobile